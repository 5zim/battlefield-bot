import requests
from datetime import datetime
import telebot
import re
from bs4 import BeautifulSoup
from flask import Flask, request
import threading
import schedule
import time
import os

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv('TELEGRAM_TOKEN')  # –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
bot = telebot.TeleBot(TOKEN)

# –ß–∞—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
CHAT_ID = '@SalePixel'  # –¢–≤–æ–π –∫–∞–Ω–∞–ª

# –°–ø–∏—Å–æ–∫ Battlefield –∏–≥—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞
BATTLEFIELD_TITLES = [
    "Battlefield 1",
    "Battlefield V",
    "Battlefield 2042",
    "Battlefield 4",
    "Battlefield 3",
    "Battlefield Hardline"
]

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–∫–∏–¥–æ–∫
posted_items = set()

# CheapShark API: –°–∫–∏–¥–∫–∏ –Ω–∞ –∏–≥—Ä—ã
def get_cheapshark_deals():
    print("–ü—Ä–æ–≤–µ—Ä—è—é —Å–∫–∏–¥–∫–∏ —á–µ—Ä–µ–∑ CheapShark API...", flush=True)
    discounts = []
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
        stores_url = "https://www.cheapshark.com/api/1.0/stores"
        stores_response = requests.get(stores_url).json()
        store_map = {store["storeID"]: store["storeName"] for store in stores_response}
        print(f"CheapShark: –ù–∞–π–¥–µ–Ω–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {len(store_map)}", flush=True)

        # –ò—â–µ–º —Å–∫–∏–¥–∫–∏ –Ω–∞ Battlefield
        for title in BATTLEFIELD_TITLES:
            deals_url = f"https://www.cheapshark.com/api/1.0/deals?title={title}&sortBy=Price"
            response = requests.get(deals_url).json()
            for deal in response:
                if "Battlefield" in deal["title"]:
                    store_id = deal["storeID"]
                    store_name = store_map.get(store_id, "Unknown Store")
                    discount_percent = round(float(deal["savings"]))
                    if discount_percent > 0:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∞
                        deal_id = deal["dealID"]
                        discounts.append({
                            "id": f"cheapshark_{deal_id}",
                            "name": deal["title"],
                            "discount": discount_percent,
                            "price": f"${deal['salePrice']}",
                            "url": f"https://www.cheapshark.com/redirect?dealID={deal_id}",
                            "store": store_name
                        })
                        print(f"CheapShark: –ù–∞–π–¥–µ–Ω–∞ —Å–∫–∏–¥–∫–∞: {deal['title']} - {discount_percent}% –≤ {store_name}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ CheapShark: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ —Å–∫–∏–¥–æ–∫ —á–µ—Ä–µ–∑ CheapShark: {len(discounts)}", flush=True)
    return discounts

# Epic Games: –¢–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
def get_epic_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Epic Games...", flush=True)
    discounts = []
    try:
        url = "https://store-site-backend-static-ipv4.ak.epicgames.com/freeGamesPromotions?locale=en-US&country=US&allowCountries=US"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        print(f"Epic: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}", flush=True)
        data = response.json()
        games = data["data"]["Catalog"]["searchStore"]["elements"]
        print(f"Epic: –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä: {len(games)}", flush=True)
        for game in games:
            title = game.get("title", "")
            if "Battlefield" in title:
                print(f"Epic: –ù–∞–π–¥–µ–Ω–∞ –∏–≥—Ä–∞: {title}", flush=True)
                price = game["price"]["totalPrice"]["discountPrice"]
                if price == 0:  # –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞
                    product_slug = game.get("productSlug", game.get("urlSlug", ""))
                    discounts.append({
                        "id": f"epic_{game['id']}",
                        "name": title,
                        "discount": 100,  # –ë–µ—Å–ø–ª–∞—Ç–Ω–æ = 100% —Å–∫–∏–¥–∫–∞
                        "price": "Free",
                        "url": f"https://www.epicgames.com/store/en-US/p/{product_slug}",
                        "store": "Epic Games"
                    })
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Epic: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–∞–∑–¥–∞—á –≤ Epic: {len(discounts)}", flush=True)
    return discounts

# Prime Gaming: –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ RSS –∏–ª–∏ –¥—Ä—É–≥–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫
def get_prime_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Prime Gaming —á–µ—Ä–µ–∑ RSS...", flush=True)
    discounts = []
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º RSS-–ª–µ–Ω—Ç—É –∏–ª–∏ –¥—Ä—É–≥–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, GamingOnLinux)
        url = "https://www.gamingonlinux.com/feeds/rss/"  # –ü—Ä–∏–º–µ—Ä RSS-–ª–µ–Ω—Ç—ã
        response = requests.get(url)
        soup = BeautifulSoup(response.content, 'xml')
        items = soup.find_all("item")
        print(f"Prime: –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ RSS: {len(items)}", flush=True)
        for item in items:
            title = item.find("title").text if item.find("title") else ""
            if "Battlefield" in title and "Prime Gaming" in title:
                print(f"Prime: –ù–∞–π–¥–µ–Ω–∞ –∏–≥—Ä–∞: {title}", flush=True)
                link = item.find("link").text if item.find("link") else "https://gaming.amazon.com/home"
                discounts.append({
                    "id": f"prime_{title}",
                    "name": title,
                    "discount": 100,  # –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
                    "price": "Free with Prime",
                    "url": link,
                    "store": "Prime Gaming"
                })
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Prime: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ Prime Gaming: {len(discounts)}", flush=True)
    return discounts

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è
def check_battlefield(chat_id):
    print("–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Battlefield...", flush=True)
    all_discounts = (
        get_cheapshark_deals() +
        get_epic_battlefield() +
        get_prime_battlefield()
    )
    if not all_discounts:
        bot.send_message(chat_id, "üîç –ü–æ–∫–∞ Battlefield –æ—Ç–¥—ã—Ö–∞–µ—Ç –æ—Ç —Å–∫–∏–¥–æ–∫ –∏ —Ä–∞–∑–¥–∞—á. –°–æ–ª–¥–∞—Ç—ã, –≥–æ—Ç–æ–≤—å—Ç–µ –∫–æ—à–µ–ª—å–∫–∏ ‚Äî –∂–¥—ë–º —Å–ª–µ–¥—É—é—â—É—é –∞—Ç–∞–∫—É –∞–∫—Ü–∏–π!")
        print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–∫–∏–¥–æ–∫", flush=True)
    else:
        for item in all_discounts:
            item_id = item["id"]
            if item_id not in posted_items:
                message = (
                    f"üéÆ {item['name']}\n"
                    f"üî• –°–∫–∏–¥–∫–∞: {item['discount']}%\n"
                    f"üí∞ –¶–µ–Ω–∞: {item['price']}\n"
                    f"üè™ –ú–∞–≥–∞–∑–∏–Ω: {item['store']}\n"
                    f"üîó [–ö—É–ø–∏—Ç—å]({item['url']})"
                )
                bot.send_message(chat_id, message, parse_mode="Markdown", disable_web_page_preview=True)
                posted_items.add(item_id)
                print(f"–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {item['name']}", flush=True)

# –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Render
@app.route('/', methods=['GET'])
def home():
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞", flush=True)
    return "Bot is alive. Use /check in Telegram to trigger.", 200

# –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
@app.route('/webhook', methods=['POST'])
def webhook():
    print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ /webhook", flush=True)
    try:
        data = request.get_json()
        if not data:
            print("–û—à–∏–±–∫–∞: –ü—É—Å—Ç–æ–π JSON", flush=True)
            return 'Bad Request', 400
        print(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}", flush=True)
        update = telebot.types.Update.de_json(data)
        if not update:
            print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å Update", flush=True)
            return 'Bad Request', 400

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≥—Ä—É–ø–ø
        if update.message:
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}, Chat ID: {update.message.chat.id}, Message ID: {update.message.message_id}", flush=True)
            if update.message.text == '/check':
                chat_id = '@SalePixel'
                threading.Thread(target=check_battlefield, args=(chat_id,), daemon=True).start()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
        elif update.channel_post:
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞: {update.channel_post.text}, Chat ID: {update.channel_post.chat.id}", flush=True)
            if update.channel_post.text == '/check':
                chat_id = '@SalePixel'
                threading.Thread(target=check_battlefield, args=(chat_id,), daemon=True).start()

        return 'OK', 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ webhook: {e}", flush=True)
        return 'Error', 500

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
def set_webhook():
    webhook_url = 'https://battlefield-bot.onrender.com/webhook'
    try:
        bot.remove_webhook()
        bot.set_webhook(url=webhook_url)
        print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}", flush=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(60)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!", flush=True)
    schedule.every().day.at("12:00").do(check_battlefield, chat_id='@SalePixel')  # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 12:00 UTC
    threading.Thread(target=run_schedule, daemon=True).start()
    set_webhook()
    port = int(os.getenv('PORT', 8000))
    app.run(host='0.0.0.0', port=port)
