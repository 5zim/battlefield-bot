import requests
from datetime import datetime
import telebot
import re
from bs4 import BeautifulSoup
from flask import Flask, request
import time
import os
from apscheduler.schedulers.background import BackgroundScheduler
import pytz

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)

# –ß–∞—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
CHAT_ID = '@SalePixel'

# –°–ø–∏—Å–æ–∫ Battlefield –∏–≥—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞
BATTLEFIELD_TITLES = [
    "Battlefield 1",
    "Battlefield V",
    "Battlefield 2042",
    "Battlefield 4",
    "Battlefield 3",
    "Battlefield Hardline"
]

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–∫–∏–¥–æ–∫
posted_items = set()

# –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–∞—Å—Ç–æ—Ç—ã –∫–æ–º–∞–Ω–¥
command_counts = {}
timeouts = {}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–∞—Å—Ç–æ—Ç—ã –∫–æ–º–∞–Ω–¥
def check_rate_limit(chat_id, user_id):
    if str(chat_id).startswith("-100"):
        return True

    current_time = time.time()

    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–π–º-–∞—É—Ç
    if chat_id in timeouts and timeouts[chat_id] > current_time:
        remaining_time = int(timeouts[chat_id] - current_time)
        minutes, seconds = divmod(remaining_time, 60)
        message = f"–ù—É–±–∏—â–µ, —Ç—ã –Ω–∞ —Ç–∞–π–º-–∞—É—Ç–µ! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç {seconds} —Å–µ–∫—É–Ω–¥, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–Ω–æ–≤–∞ –ø–∏—Å–∞—Ç—å. üö¨"
        bot.send_message(chat_id, message)
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {message}", flush=True)
        return False

    # –ï—Å–ª–∏ —Ç–∞–π–º-–∞—É—Ç–∞ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–æ—Ç—É –∫–æ–º–∞–Ω–¥
    if chat_id not in command_counts:
        command_counts[chat_id] = []
    command_counts[chat_id] = [t for t in command_counts[chat_id] if current_time - t < 60]
    command_counts[chat_id].append(current_time)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥
    if len(command_counts[chat_id]) >= 3:
        timeout_until = current_time + 3600
        timeouts[chat_id] = timeout_until
        message = "–ù—É–±–∏—â–µ, —è –¥—É–º–∞—é —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫—É—Ä–∏—Ç—å —á–∞—Å–∏–∫. –¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥ –ø–æ–¥—Ä—è–¥. üö¨"
        bot.send_message(chat_id, message)
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {message}", flush=True)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª —Ç–∞–π–º-–∞—É—Ç –Ω–∞ 1 —á–∞—Å", flush=True)
        return False
    elif len(command_counts[chat_id]) == 2:
        message = "–ë—Ä–∞—Ç–∞–Ω, –æ—Å—Ç—ã–Ω—å, –Ω–µ –Ω–∞–¥–æ —Å–ø–∞–º–∏—Ç—å, —è —Ç–µ–±–µ —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª —Ä–∞–Ω–µ–µ.üòé"
        bot.send_message(chat_id, message)
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {message}", flush=True)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ —Å–ø–∞–º", flush=True)

    return True

# CheapShark API: –°–∫–∏–¥–∫–∏ –Ω–∞ –∏–≥—Ä—ã
def get_cheapshark_deals():
    print("–ü—Ä–æ–≤–µ—Ä—è—é —Å–∫–∏–¥–∫–∏ —á–µ—Ä–µ–∑ CheapShark API... üïµÔ∏è‚Äç‚ôÇÔ∏è", flush=True)
    discounts = []
    seen_deals = set()
    try:
        stores_url = "https://www.cheapshark.com/api/1.0/stores"
        stores_response = requests.get(stores_url).json()
        store_map = {store["storeID"]: store["storeName"] for store in stores_response}
        print(f"CheapShark: –ù–∞–π–¥–µ–Ω–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {len(store_map)}", flush=True)
        print(f"–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {list(store_map.values())}", flush=True)

        for title in BATTLEFIELD_TITLES:
            deals_url = f"https://www.cheapshark.com/api/1.0/deals?title={title}&sortBy=Price"
            response = requests.get(deals_url).json()
            for deal in response:
                deal_title = deal["title"]
                if "Battlefield" in deal_title and "Medieval" not in deal_title:
                    matches_title = any(bf_title in deal_title for bf_title in BATTLEFIELD_TITLES)
                    if matches_title:
                        store_id = deal["storeID"]
                        store_name = store_map.get(store_id, "Unknown Store")
                        discount_percent = round(float(deal["savings"]))
                        if discount_percent > 0:
                            deal_key = f"{deal['title']}_{store_name}_{discount_percent}"
                            if deal_key not in seen_deals:
                                seen_deals.add(deal_key)
                                deal_id = deal["dealID"]
                                discounts.append({
                                    "id": f"cheapshark_{deal_id}",
                                    "name": deal["title"],
                                    "discount": discount_percent,
                                    "price": f"${deal['salePrice']}",
                                    "url": f"https://www.cheapshark.com/redirect?dealID={deal_id}",
                                    "store": store_name
                                })
                                print(f"CheapShark: –ù–∞–π–¥–µ–Ω–∞ —Å–∫–∏–¥–∫–∞: {deal['title']} - {discount_percent}% –≤ {store_name}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ CheapShark: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ —Å–∫–∏–¥–æ–∫ —á–µ—Ä–µ–∑ CheapShark: {len(discounts)}", flush=True)
    return discounts

# Epic Games: –¢–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
def get_epic_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Epic Games... üéÆ", flush=True)
    discounts = []
    try:
        url = "https://store-site-backend-static-ipv4.ak.epicgames.com/freeGamesPromotions?locale=en-US&country=US&allowCountries=US"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        print(f"Epic: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}", flush=True)
        data = response.json()
        games = data["data"]["Catalog"]["searchStore"]["elements"]
        print(f"Epic: –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä: {len(games)}", flush=True)
        for game in games:
            title = game.get("title", "")
            if "Battlefield" in title:
                print(f"Epic: –ù–∞–π–¥–µ–Ω–∞ –∏–≥—Ä–∞: {title}", flush=True)
                price = game["price"]["totalPrice"]["discountPrice"]
                if price == 0:
                    product_slug = game.get("productSlug", game.get("urlSlug", ""))
                    discounts.append({
                        "id": f"epic_{game['id']}",
                        "name": title,
                        "discount": 100,
                        "price": "Free",
                        "url": f"https://www.epicgames.com/store/en-US/p/{product_slug}",
                        "store": "Epic Games"
                    })
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Epic: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–∞–∑–¥–∞—á –≤ Epic: {len(discounts)}", flush=True)
    return discounts

# GOG.com: –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ –∏ —Å–∫–∏–¥–∫–∏
def get_gog_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ GOG.com... üéÅ", flush=True)
    discounts = []
    try:
        url = "https://www.gog.com/en/games?priceRange=0,0"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.content, "html.parser")
        games = soup.find_all("a", class_="product-tile")
        print(f"GOG: –ù–∞–π–¥–µ–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä: {len(games)}", flush=True)
        for game in games:
            title_element = game.find("span", class_="product-tile__title")
            if not title_element:
                continue
            title = title_element.text.strip()
            if "Battlefield" in title:
                game_url = "https://www.gog.com" + game.get("href")
                discounts.append({
                    "id": f"gog_giveaway_{title}",
                    "name": title,
                    "discount": 100,
                    "price": "Free",
                    "url": game_url,
                    "store": "GOG.com"
                })
                print(f"GOG: –ù–∞–π–¥–µ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∏–≥—Ä–∞: {title}", flush=True)

        for title in BATTLEFIELD_TITLES:
            search_url = f"https://catalog.gog.com/v1/catalog?query={title}&order=desc:discounted&limit=10"
            response = requests.get(search_url, headers=headers).json()
            products = response.get("products", [])
            for product in products:
                if "Battlefield" in product["title"]:
                    discount = product.get("price", {}).get("discountPercentage", 0)
                    if discount > 0:
                        price = product["price"]["finalPrice"]
                        product_url = f"https://www.gog.com{product['url']}"
                        discounts.append({
                            "id": f"gog_discount_{product['id']}",
                            "name": product["title"],
                            "discount": discount,
                            "price": price,
                            "url": product_url,
                            "store": "GOG.com"
                        })
                        print(f"GOG: –ù–∞–π–¥–µ–Ω–∞ —Å–∫–∏–¥–∫–∞: {product['title']} - {discount}%", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ GOG: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ GOG.com: {len(discounts)}", flush=True)
    return discounts

# IndieGala: –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
def get_indiegala_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ IndieGala... üéâ", flush=True)
    discounts = []
    try:
        url = "https://freebies.indiegala.com/"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.content, "html.parser")
        games = soup.find_all("div", class_="relative")
        print(f"IndieGala: –ù–∞–π–¥–µ–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä: {len(games)}", flush=True)
        for game in games:
            title_element = game.find("h5", class_="font-bold")
            if not title_element:
                continue
            title = title_element.text.strip()
            if "Battlefield" in title:
                game_url = game.find("a", class_="relative")["href"]
                discounts.append({
                    "id": f"indiegala_{title}",
                    "name": title,
                    "discount": 100,
                    "price": "Free",
                    "url": game_url,
                    "store": "IndieGala"
                })
                print(f"IndieGala: –ù–∞–π–¥–µ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∏–≥—Ä–∞: {title}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ IndieGala: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ IndieGala: {len(discounts)}", flush=True)
    return discounts

# Fanatical: –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
def get_fanatical_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Fanatical... üéà", flush=True)
    discounts = []
    try:
        url = "https://www.fanatical.com/en/blog/free-games"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.content, "html.parser")
        articles = soup.find_all("article")
        print(f"Fanatical: –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}", flush=True)
        for article in articles:
            title_element = article.find("h2")
            if not title_element:
                continue
            title = title_element.text.strip()
            if "Battlefield" in title:
                link_element = article.find("a")
                if link_element and "href" in link_element.attrs:
                    game_url = "https://www.fanatical.com" + link_element["href"]
                    discounts.append({
                        "id": f"fanatical_{title}",
                        "name": title,
                        "discount": 100,
                        "price": "Free",
                        "url": game_url,
                        "store": "Fanatical"
                    })
                    print(f"Fanatical: –ù–∞–π–¥–µ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∏–≥—Ä–∞: {title}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Fanatical: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ Fanatical: {len(discounts)}", flush=True)
    return discounts

# Steam: –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ —á–µ—Ä–µ–∑ RSS-–ª–µ–Ω—Ç—É
def get_steam_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Steam (—Ä–∞–∑–¥–∞—á–∏)... üéÆ", flush=True)
    discounts = []
    try:
        url = "https://store.steampowered.com/feeds/news/"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.content, "xml")
        items = soup.find_all("item")
        print(f"Steam: –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {len(items)}", flush=True)
        for item in items:
            title = item.find("title").text.strip()
            if "Battlefield" in title and "free" in title.lower():
                link = item.find("link").text.strip()
                matches_title = any(bf_title in title for bf_title in BATTLEFIELD_TITLES)
                if matches_title:
                    discounts.append({
                        "id": f"steam_{title}",
                        "name": title,
                        "discount": 100,
                        "price": "Free",
                        "url": link,
                        "store": "Steam"
                    })
                    print(f"Steam: –ù–∞–π–¥–µ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞: {title}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Steam: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ Steam: {len(discounts)}", flush=True)
    return discounts

# –û—á–∏—Å—Ç–∫–∞ posted_items —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é
def clear_posted_items():
    print("–û—á–∏—â–∞—é posted_items... üßπ", flush=True)
    global posted_items
    posted_items.clear()
    print("posted_items –æ—á–∏—â–µ–Ω!", flush=True)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è
def check_battlefield(chat_id, user_chat_id=None):
    try:
        print("–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Battlefield... ‚öîÔ∏è", flush=True)
        all_discounts = (
            get_cheapshark_deals() +
            get_epic_battlefield() +
            get_gog_battlefield() +
            get_indiegala_battlefield() +
            get_fanatical_battlefield() +
            get_steam_battlefield()
        )
        new_discounts = 0
        if not all_discounts:
            message = "üîç –ü–æ–∫–∞ Battlefield –æ—Ç–¥—ã—Ö–∞–µ—Ç –æ—Ç —Å–∫–∏–¥–æ–∫ –∏ —Ä–∞–∑–¥–∞—á."
            bot.send_message(chat_id, message)
            print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {chat_id}: {message}", flush=True)
            if user_chat_id:
                message = "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–æ–≤—ã—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç. –í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ @SalePixel: https://t.me/SalePixel üì¢"
                bot.send_message(user_chat_id, message)
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_chat_id}: {message}", flush=True)
        else:
            for item in all_discounts:
                item_id = item["id"]
                if item_id not in posted_items:
                    message = (
                        f"üéÆ **{item['name']}**\n"
                        f"üî• –°–∫–∏–¥–∫–∞: {item['discount']}%\n"
                        f"üí∞ –¶–µ–Ω–∞: {item['price']}\n"
                        f"üè™ –ú–∞–≥–∞–∑–∏–Ω: {item['store']}\n"
                        f"üîó [–ö—É–ø–∏—Ç—å]({item['url']})"
                    )
                    bot.send_message(chat_id, message, parse_mode="Markdown", disable_web_page_preview=True)
                    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {chat_id}: {message}", flush=True)
                    print(f"–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {item['name']}", flush=True)
                    posted_items.add(item_id)
                    new_discounts += 1

            if new_discounts == 0:
                message = "üîç –ù–æ–≤—ã—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç. –í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã! ‚úÖ"
                bot.send_message(chat_id, message)
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {chat_id}: {message}", flush=True)
                print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: –Ω–æ–≤—ã—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç", flush=True)

        if user_chat_id:
            if new_discounts > 0:
                message = f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–∞–π–¥–µ–Ω–æ {new_discounts} –Ω–æ–≤—ã—Ö —Å–∫–∏–¥–æ–∫. –ü–æ—Å–º–æ—Ç—Ä–∏ –≤ @SalePixel: https://t.me/SalePixel üì¢"
            else:
                message = "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–æ–≤—ã—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç. –í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ @SalePixel: https://t.me/SalePixel üì¢"
            bot.send_message(user_chat_id, message)
            print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_chat_id}: {message}", flush=True)
            print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_chat_id}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ check_battlefield: {e}", flush=True)

# –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Render
@app.route('/', methods=['GET'])
def home():
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞", flush=True)
    return "Bot is alive. Use /check in Telegram to trigger.", 200

# –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
@app.route('/webhook', methods=['POST'])
def webhook():
    print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ /webhook", flush=True)
    try:
        data = request.get_json()
        if not data:
            print("–û—à–∏–±–∫–∞: –ü—É—Å—Ç–æ–π JSON", flush=True)
            return 'Bad Request', 400
        print(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}", flush=True)
        update = telebot.types.Update.de_json(data)
        if not update:
            print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å Update", flush=True)
            return 'Bad Request', 400

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
        if update.message and update.message.new_chat_members:
            chat_id = update.message.chat.id
            for new_member in update.message.new_chat_members:
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ ‚Äî —ç—Ç–æ —Å–∞–º –±–æ—Ç
                if new_member.id == bot.get_me().id:
                    continue
                first_name = new_member.first_name if new_member.first_name else "–¥—Ä—É–≥"
                user_id = new_member.id
                welcome_message = (
                    f"üëã –ü—Ä–∏–≤–µ—Ç, {first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É! üéâ\n"
                    "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Å–∫–∏–¥–∫–∏ –∏ —Ä–∞–∑–¥–∞—á–∏ –Ω–∞ Battlefield. "
                    "–ù–∞–ø–∏—à–∏ /check, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É. "
                    "–í—Å–µ —Å–∫–∏–¥–∫–∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ @SalePixel: https://t.me/SalePixel üì¢"
                )
                bot.send_message(chat_id, welcome_message)
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É {first_name} (ID: {user_id}) –≤ —á–∞—Ç–µ {chat_id}", flush=True)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if update.message:
            print(f"–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ: {update.message}", flush=True)
            chat_id = update.message.chat.id
            user_id = update.message.from_user.id
            print(f"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {update.message.text}, Chat ID: {chat_id}, Message ID: {update.message.message_id}", flush=True)
            if update.message.text == '/check':
                if not check_rate_limit(chat_id, user_id):
                    return 'OK', 200
                print("–ö–æ–º–∞–Ω–¥–∞ /check –ø–æ–ª—É—á–µ–Ω–∞ –≤ –ª–∏—á–∫–µ, –∑–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É...", flush=True)
                chat_id = '@SalePixel'
                user_chat_id = update.message.chat.id
                check_battlefield(chat_id, user_chat_id)
            elif update.message.text == '/start':
                if not check_rate_limit(chat_id, user_id):
                    return 'OK', 200
                print("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –≤ –ª–∏—á–∫–µ, –æ—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ...", flush=True)
                message = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Å–∫–∏–¥–∫–∏ –∏ —Ä–∞–∑–¥–∞—á–∏ –Ω–∞ Battlefield. –ù–∞–ø–∏—à–∏ /check, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É. –í—Å–µ —Å–∫–∏–¥–∫–∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ @SalePixel: https://t.me/SalePixel üì¢"
                bot.send_message(update.message.chat.id, message)
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.message.chat.id}: {message}", flush=True)
            else:
                print("–ü–æ–ª—É—á–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤ –ª–∏—á–∫–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É—é", flush=True)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞
        elif update.channel_post:
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–æ: {update.channel_post}", flush=True)
            chat_id = update.channel_post.chat.id
            print(f"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {update.channel_post.text}, Chat ID: {chat_id}", flush=True)
            if update.channel_post.text == '/check':
                print("–ö–æ–º–∞–Ω–¥–∞ /check –ø–æ–ª—É—á–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ, –∑–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É...", flush=True)
                chat_id = '@SalePixel'
                check_battlefield(chat_id)
            elif update.channel_post.text == '/start':
                print("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ, –æ—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ...", flush=True)
                message = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Å–∫–∏–¥–∫–∏ –∏ —Ä–∞–∑–¥–∞—á–∏ –Ω–∞ Battlefield. –ù–∞–ø–∏—à–∏ /check, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É. –í—Å–µ —Å–∫–∏–¥–∫–∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ @SalePixel: https://t.me/SalePixel üì¢"
                bot.send_message(update.channel_post.chat.id, message)
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {update.channel_post.chat.id}: {message}", flush=True)
            else:
                print("–ü–æ–ª—É—á–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤ –∫–∞–Ω–∞–ª–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É—é", flush=True)

        return 'OK', 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ webhook: {e}", flush=True)
        return 'Error', 500

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
def set_webhook():
    webhook_url = 'https://battlefield-bot.onrender.com/webhook'
    try:
        bot.remove_webhook()
        bot.set_webhook(url=webhook_url)
        print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}", flush=True)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! üöÄ", flush=True)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º UTC
    scheduler = BackgroundScheduler(timezone=pytz.UTC)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ 12:00 UTC = 15:00 –ú–°–ö
    scheduler.add_job(check_battlefield, 'cron', hour=12, minute=0, args=[CHAT_ID])
    scheduler.add_job(clear_posted_items, 'cron', day_of_week='mon', hour=0, minute=0)
    scheduler.start()
    print("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω —Å —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º UTC", flush=True)

    set_webhook()
    port = int(os.getenv('PORT', 8000))
    app.run(host='0.0.0.0', port=port)
