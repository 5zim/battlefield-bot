import requests
from datetime import datetime
import telebot
import re
from bs4 import BeautifulSoup
from flask import Flask, request
import threading
import schedule
import time
import os

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv('TELEGRAM_TOKEN')  # –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
bot = telebot.TeleBot(TOKEN)

# –ß–∞—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
CHAT_ID = '@SalePixel'  # –¢–≤–æ–π –∫–∞–Ω–∞–ª

# –°–ø–∏—Å–æ–∫ Battlefield –∏–≥—Ä —Å –∏—Ö Steam ID
BATTLEFIELD_GAMES = {
    # –î–æ–±–∞–≤—å Steam ID –∏–≥—Ä, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
    # "Battlefield 1": "1237600",
    # "Battlefield V": "1238810"
}

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–∫–∏–¥–æ–∫
posted_items = set()

# Steam: –°–∫–∏–¥–∫–∏ –∏ —Ä–∞–∑–¥–∞—á–∏
def get_steam_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Steam...", flush=True)
    discounts = []
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Steam (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ Steam API)
    # –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ Steam: {len(discounts)}", flush=True)
    return discounts

# EA App: –°–∫–∏–¥–∫–∏ –∏ —Ä–∞–∑–¥–∞—á–∏
def get_ea_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ EA App...", flush=True)
    discounts = []
    try:
        url = "https://www.ea.com/games"
        print(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ {url}", flush=True)
        response = requests.get(url)
        print(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: –°—Ç–∞—Ç—É—Å {response.status_code}", flush=True)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            # –ó–¥–µ—Å—å –ø–∞—Ä—Å–∏–Ω–≥ —Å–∫–∏–¥–æ–∫ (–¥–æ–±–∞–≤—å –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            print(f"–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞: 0", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ EA: {e}", flush=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ EA: {len(discounts)}", flush=True)
    return discounts

# Epic Games: –¢–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
def get_epic_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Epic Games...", flush=True)
    discounts = []
    # –ó–¥–µ—Å—å –ø–∞—Ä—Å–∏–Ω–≥ Epic Games (–¥–æ–±–∞–≤—å –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–∞–∑–¥–∞—á –≤ Epic: {len(discounts)}", flush=True)
    return discounts

# Prime Gaming: –°–∫–∏–¥–∫–∏ –∏ —Ä–∞–∑–¥–∞—á–∏
def get_prime_battlefield():
    print("–ü—Ä–æ–≤–µ—Ä—è—é Battlefield –≤ Prime Gaming...", flush=True)
    discounts = []
    # –ó–¥–µ—Å—å –ø–∞—Ä—Å–∏–Ω–≥ Prime Gaming (–¥–æ–±–∞–≤—å –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    print(f"–ù–∞–π–¥–µ–Ω–æ –≤ Prime Gaming: {len(discounts)}", flush=True)
    return discounts

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è
def check_battlefield(chat_id):
    print("–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Battlefield...", flush=True)
    all_discounts = (
        get_steam_battlefield() +
        get_ea_battlefield() +
        get_epic_battlefield() +
        get_prime_battlefield()
    )
    if not all_discounts:
        bot.send_message(chat_id, "üîç –ü–æ–∫–∞ Battlefield –æ—Ç–¥—ã—Ö–∞–µ—Ç –æ—Ç —Å–∫–∏–¥–æ–∫ –∏ —Ä–∞–∑–¥–∞—á.")
        print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–∫–∏–¥–æ–∫", flush=True)
    else:
        for item in all_discounts:
            item_id = item.get('id', str(datetime.now()))  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–∫–∏–¥–∫–∏
            if item_id not in posted_items:
                # –ó–¥–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–µ (–¥–æ–±–∞–≤—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
                bot.send_message(chat_id, f"–ù–∞–π–¥–µ–Ω–∞ —Å–∫–∏–¥–∫–∞: {item}")
                posted_items.add(item_id)

# –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Render
@app.route('/', methods=['GET'])
def home():
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞", flush=True)
    return "Bot is alive. Use /check in Telegram to trigger.", 200

# –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
@app.route('/webhook', methods=['POST'])
def webhook():
    print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ /webhook", flush=True)
    try:
        data = request.get_json()
        if not data:
            print("–û—à–∏–±–∫–∞: –ü—É—Å—Ç–æ–π JSON", flush=True)
            return 'Bad Request', 400
        print(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}", flush=True)
        update = telebot.types.Update.de_json(data)
        if not update:
            print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å Update", flush=True)
            return 'Bad Request', 400

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≥—Ä—É–ø–ø
        if update.message:
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}, Chat ID: {update.message.chat.id}", flush=True)
            if update.message.text == '/check':
                chat_id = '@SalePixel'
                threading.Thread(target=check_battlefield, args=(chat_id,), daemon=True).start()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
        elif update.channel_post:
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞: {update.channel_post.text}, Chat ID: {update.channel_post.chat.id}", flush=True)
            if update.channel_post.text == '/check':
                chat_id = '@SalePixel'
                threading.Thread(target=check_battlefield, args=(chat_id,), daemon=True).start()

        return 'OK', 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ webhook: {e}", flush=True)
        return 'Error', 500

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
def set_webhook():
    webhook_url = 'https://battlefield-bot.onrender.com/webhook'
    try:
        bot.remove_webhook()
        bot.set_webhook(url=webhook_url)
        print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}", flush=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}", flush=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(60)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!", flush=True)
    schedule.every().day.at("12:00").do(check_battlefield, chat_id='@SalePixel')  # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 12:00 UTC
    threading.Thread(target=run_schedule, daemon=True).start()
    set_webhook()
    port = int(os.getenv('PORT', 8000))  # –ë–µ—Ä–∏ –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8000
app.run(host='0.0.0.0', port=port)
